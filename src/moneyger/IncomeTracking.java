/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package moneyger;
import java.awt.*;
import java.sql.*;
import javax.swing.*;
import java.util.ArrayList;
import java.util.List;

// import org.jfree.chart.*;
// import org.jfree.data.general.DefaultPieDataset;
import java.sql.ResultSet;
// import org.jfree.data.category.DefaultCategoryDataset;



/**
 *
 * @author PC
 */
public class IncomeTracking extends javax.swing.JPanel {
    private Moneyger mainFrame;
    private double currentValue = 0.0;
    private String currentOperator = "";
    private List<String> storedData = new ArrayList<>();
    // private DefaultPieDataset dataset;
    /**
     * Creates new form LogInn
     */
    public IncomeTracking(Moneyger mainFrame) {
        initComponents();
        this.mainFrame = mainFrame;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        yesButton = new javax.swing.JButton();
        Profile = new javax.swing.JLabel();
        Logout = new javax.swing.JLabel();
        noButton = new javax.swing.JButton();
        BalanceTrendTitle = new javax.swing.JLabel();
        ScrollList = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        ExpenseLoggerTitles = new javax.swing.JLabel();
        AccountDropdown1 = new javax.swing.JComboBox<>();
        CategoryDropdown = new javax.swing.JComboBox<>();
        Plus = new javax.swing.JButton();
        Minus = new javax.swing.JButton();
        Times = new javax.swing.JButton();
        Divide = new javax.swing.JButton();
        Equals = new javax.swing.JButton();
        CreateRecordButton = new javax.swing.JButton();
        AmountField = new javax.swing.JTextField();
        TextField = new javax.swing.JScrollPane();
        AddNotes = new javax.swing.JTextArea();
        DashboardButton = new javax.swing.JButton();
        ExpenseTrackingButton = new javax.swing.JButton();
        IncomeTrackingButton = new javax.swing.JButton();
        GoalsAndReminders = new javax.swing.JButton();
        WhatsNewButton = new javax.swing.JButton();
        LogoutButton = new javax.swing.JButton();
        ExpenseTrackingBG = new javax.swing.JLabel();
        SideMenu = new javax.swing.JLabel();
        WhiteBG = new javax.swing.JLabel();
        BaseBG = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();

        setLayout(null);

        yesButton.setBorderPainted(false);
        yesButton.setContentAreaFilled(false);
        yesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yesButtonActionPerformed(evt);
            }
        });
        add(yesButton);
        yesButton.setBounds(500, 340, 70, 40);
        yesButton.setVisible(false);

        Profile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/moneyger/UI Elements/New BG/Group 39.png"))); // NOI18N
        add(Profile);
        Profile.setBounds(110, 100, 140, 136);

        Logout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/moneyger/UI Elements/HomeDashboard/Logoutt.png"))); // NOI18N
        add(Logout);
        Logout.setBounds(390, 240, 440, 173);
        Logout.setVisible(false);

        noButton.setBorderPainted(false);
        noButton.setContentAreaFilled(false);
        noButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noButtonActionPerformed(evt);
            }
        });
        add(noButton);
        noButton.setBounds(660, 340, 70, 40);
        noButton.setVisible(false);

        BalanceTrendTitle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/moneyger/UI Elements/New BG/Records.png"))); // NOI18N
        add(BalanceTrendTitle);
        BalanceTrendTitle.setBounds(830, 90, 130, 30);

        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = {""};
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jList1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jList1PropertyChange(evt);
            }
        });
        ScrollList.setViewportView(jList1);

        add(ScrollList);
        ScrollList.setBounds(790, 130, 210, 310);

        ExpenseLoggerTitles.setIcon(new javax.swing.ImageIcon(getClass().getResource("/moneyger/UI Elements/IncomeTracking/ImageIL.png"))); // NOI18N
        add(ExpenseLoggerTitles);
        ExpenseLoggerTitles.setBounds(340, 100, 400, 90);

        AccountDropdown1.setBackground(new java.awt.Color(245, 245, 245));
        AccountDropdown1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        AccountDropdown1.setForeground(new java.awt.Color(0, 101, 71));
        AccountDropdown1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cash" }));
        AccountDropdown1.setBorder(null);
        AccountDropdown1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        AccountDropdown1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AccountDropdown1ActionPerformed(evt);
            }
        });
        add(AccountDropdown1);
        AccountDropdown1.setBounds(340, 190, 195, 40);

        CategoryDropdown.setBackground(new java.awt.Color(245, 245, 245));
        CategoryDropdown.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        CategoryDropdown.setForeground(new java.awt.Color(0, 101, 71));
        CategoryDropdown.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {"Salary", "Allowance", "Awards", "Grants", "etc"}));
        add(CategoryDropdown);
        CategoryDropdown.setBounds(545, 190, 195, 40);

        Plus.setBackground(new java.awt.Color(245, 245, 245));
        Plus.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        Plus.setText("+");
        Plus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PlusActionPerformed(evt);
            }
        });
        add(Plus);
        Plus.setBounds(340, 440, 75, 50);

        Minus.setBackground(new java.awt.Color(245, 245, 245));
        Minus.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        Minus.setText("-");
        Minus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MinusActionPerformed(evt);
            }
        });
        add(Minus);
        Minus.setBounds(421, 440, 75, 50);

        Times.setBackground(new java.awt.Color(245, 245, 245));
        Times.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        Times.setText("ร");
        Times.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TimesActionPerformed(evt);
            }
        });
        add(Times);
        Times.setBounds(502, 440, 75, 50);

        Divide.setBackground(new java.awt.Color(245, 245, 245));
        Divide.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        Divide.setText("รท");
        Divide.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DivideActionPerformed(evt);
            }
        });
        add(Divide);
        Divide.setBounds(583, 440, 75, 50);

        Equals.setBackground(new java.awt.Color(245, 245, 245));
        Equals.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        Equals.setText("=");
        Equals.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EqualsActionPerformed(evt);
            }
        });
        add(Equals);
        Equals.setBounds(665, 440, 75, 50);

        CreateRecordButton.setBackground(new java.awt.Color(245, 245, 245));
        CreateRecordButton.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        CreateRecordButton.setForeground(new java.awt.Color(0, 101, 71));
        CreateRecordButton.setText("Create Record");
        CreateRecordButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateRecordButtonActionPerformed(evt);
            }
        });
        add(CreateRecordButton);
        CreateRecordButton.setBounds(550, 500, 190, 80);

        AmountField.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        AmountField.setForeground(new java.awt.Color(102, 102, 102));
        AmountField.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        AmountField.setText("Enter amount here                       ");
        AmountField.setBorder(null);
        AmountField.setOpaque(true);
        AmountField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                AmountFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                AmountFieldFocusLost(evt);
            }
        });
        AmountField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AmountFieldActionPerformed(evt);
            }
        });
        add(AmountField);
        AmountField.setBounds(341, 380, 398, 50);

        AddNotes.setColumns(20);
        AddNotes.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        AddNotes.setForeground(new java.awt.Color(102, 102, 102));
        AddNotes.setRows(5);
        AddNotes.setText("Add notes here...");
        AddNotes.setAutoscrolls(false);
        AddNotes.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                AddNotesFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                AddNotesFocusLost(evt);
            }
        });
        TextField.setViewportView(AddNotes);

        add(TextField);
        TextField.setBounds(340, 240, 400, 130);

        DashboardButton.setBorderPainted(false);
        DashboardButton.setContentAreaFilled(false);
        DashboardButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DashboardButtonActionPerformed(evt);
            }
        });
        add(DashboardButton);
        DashboardButton.setBounds(130, 300, 110, 30);

        ExpenseTrackingButton.setBorderPainted(false);
        ExpenseTrackingButton.setContentAreaFilled(false);
        ExpenseTrackingButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExpenseTrackingButtonActionPerformed(evt);
            }
        });
        add(ExpenseTrackingButton);
        ExpenseTrackingButton.setBounds(110, 350, 150, 30);

        IncomeTrackingButton.setBorderPainted(false);
        IncomeTrackingButton.setContentAreaFilled(false);
        IncomeTrackingButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IncomeTrackingButtonActionPerformed(evt);
            }
        });
        add(IncomeTrackingButton);
        IncomeTrackingButton.setBounds(110, 390, 150, 30);

        GoalsAndReminders.setBorderPainted(false);
        GoalsAndReminders.setContentAreaFilled(false);
        GoalsAndReminders.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GoalsAndRemindersActionPerformed(evt);
            }
        });
        add(GoalsAndReminders);
        GoalsAndReminders.setBounds(90, 430, 190, 40);

        WhatsNewButton.setBorderPainted(false);
        WhatsNewButton.setContentAreaFilled(false);
        WhatsNewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                WhatsNewButtonActionPerformed(evt);
            }
        });
        add(WhatsNewButton);
        WhatsNewButton.setBounds(120, 490, 130, 40);

        LogoutButton.setBorderPainted(false);
        LogoutButton.setContentAreaFilled(false);
        LogoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LogoutButtonActionPerformed(evt);
            }
        });
        add(LogoutButton);
        LogoutButton.setBounds(130, 540, 100, 40);

        ExpenseTrackingBG.setIcon(new javax.swing.ImageIcon(getClass().getResource("/moneyger/UI Elements/ExpenseTracking/ImageET.png"))); // NOI18N
        add(ExpenseTrackingBG);
        ExpenseTrackingBG.setBounds(315, 70, 451, 541);

        SideMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/moneyger/UI Elements/New BG/Group 35.png"))); // NOI18N
        add(SideMenu);
        SideMenu.setBounds(80, 70, 210, 541);

        WhiteBG.setIcon(new javax.swing.ImageIcon(getClass().getResource("/moneyger/UI Elements/IncomeTracking/whitebg.png"))); // NOI18N
        add(WhiteBG);
        WhiteBG.setBounds(45, 40, 983, 614);

        BaseBG.setIcon(new javax.swing.ImageIcon(getClass().getResource("/moneyger/UI Elements/IncomeTracking/Rectangle.png"))); // NOI18N
        add(BaseBG);
        BaseBG.setBounds(0, 0, 1080, 700);
        add(jScrollPane1);
        jScrollPane1.setBounds(0, 0, 100, 100);
    }// </editor-fold>//GEN-END:initComponents

    private void yesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yesButtonActionPerformed
        mainFrame.navigateTo(new OpenWindow(mainFrame));
    }//GEN-LAST:event_yesButtonActionPerformed

    private void noButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noButtonActionPerformed
        Logout.setVisible(false);
        yesButton.setVisible(false);
        noButton.setVisible(false);
    }//GEN-LAST:event_noButtonActionPerformed

    private void AccountDropdown1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AccountDropdown1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AccountDropdown1ActionPerformed

    private void MinusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MinusActionPerformed
        OperatorActionPerformed(evt, "-");
    }//GEN-LAST:event_MinusActionPerformed

    private void DivideActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DivideActionPerformed
        OperatorActionPerformed(evt, "/");
    }//GEN-LAST:event_DivideActionPerformed

    private void EqualsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EqualsActionPerformed

        // Handle the Equals button
    if (!AmountField.getText().isEmpty()) {
        double secondValue = Double.parseDouble(AmountField.getText());
        double result = 0.0;

        // If there's a current operator, perform the computation
        if (currentOperator != null) {
            switch (currentOperator) {
                case "+":
                    result = currentValue + secondValue;
                    break;
                case "-":
                    result = currentValue - secondValue;
                    break;
                case "*":
                    result = currentValue * secondValue;
                    break;
                case "/":
                    if (secondValue != 0) {
                        result = currentValue / secondValue;
                    } else {
                        JOptionPane.showMessageDialog(null, "Cannot divide by zero.");
                        return;
                    }
                    break;
            }
        } else {
            // If there's no current operator, set the result to the second value
            result = secondValue;
        }

        // Update the AmountField and currentValue
        AmountField.setText(String.valueOf(result));
        currentValue = result;
    }
    }//GEN-LAST:event_EqualsActionPerformed
 private void OperatorActionPerformed(java.awt.event.ActionEvent evt, String operator) {
        // Handle the operator buttons (+, -, *, /)
        if (!AmountField.getText().isEmpty()) {
            currentValue = Double.parseDouble(AmountField.getText());
            currentOperator = operator;
            AmountField.setText("");
        }}
    private void AmountFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_AmountFieldFocusGained
        // TODO add your handling code here:
        if(AmountField.getText().equals("Enter amount here                       "))
        {
            AmountField.setText("");
            AmountField.setFont(new java.awt.Font("Dialog", 1, 24));
            AmountField.setForeground(new Color(0,0,0));
        }
    }//GEN-LAST:event_AmountFieldFocusGained

    private void AmountFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_AmountFieldFocusLost
        // TODO add your handling code here:
        if(AmountField.getText().equals(""))
        {
            AmountField.setText("Enter amount here                       ");
            AmountField.setFont(new java.awt.Font("Dialog", 1, 24));
            AmountField.setForeground(new Color(0,0,0));
        }
    }//GEN-LAST:event_AmountFieldFocusLost

    private void AmountFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AmountFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AmountFieldActionPerformed

    private void AddNotesFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_AddNotesFocusGained
        // TODO add your handling code here:
        if(AddNotes.getText().equals("Add notes here..."))
        {
            AddNotes.setText("");
            AddNotes.setForeground(new Color(0,0,0));
        }
    }//GEN-LAST:event_AddNotesFocusGained

    private void AddNotesFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_AddNotesFocusLost
        // TODO add your handling code here:
        if(AddNotes.getText().equals(""))
        {
            AddNotes.setText("Add notes here...");
            AddNotes.setForeground(new Color(0,0,0));
        }
    }//GEN-LAST:event_AddNotesFocusLost

    private void DashboardButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DashboardButtonActionPerformed
       mainFrame.navigateTo(new HomeDashboard(mainFrame));
    }//GEN-LAST:event_DashboardButtonActionPerformed

    private void ExpenseTrackingButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExpenseTrackingButtonActionPerformed
        mainFrame.navigateTo(new ExpenseTracking(mainFrame));
    }//GEN-LAST:event_ExpenseTrackingButtonActionPerformed

    private void IncomeTrackingButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IncomeTrackingButtonActionPerformed
        mainFrame.navigateTo(new IncomeTracking(mainFrame));
    }//GEN-LAST:event_IncomeTrackingButtonActionPerformed

    private void GoalsAndRemindersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GoalsAndRemindersActionPerformed
        mainFrame.navigateTo(new GoalsAndReminders(mainFrame));
    }//GEN-LAST:event_GoalsAndRemindersActionPerformed

    private void WhatsNewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_WhatsNewButtonActionPerformed
       mainFrame.navigateTo(new WhatsNew(mainFrame));
    }//GEN-LAST:event_WhatsNewButtonActionPerformed

    private void LogoutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LogoutButtonActionPerformed
        Logout.setVisible(!Logout.isVisible());
        yesButton.setVisible(!yesButton.isVisible());
        noButton.setVisible(!noButton.isVisible());
    }//GEN-LAST:event_LogoutButtonActionPerformed

    private void TimesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TimesActionPerformed
        OperatorActionPerformed(evt, "*");
    }//GEN-LAST:event_TimesActionPerformed

    private void PlusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PlusActionPerformed
        OperatorActionPerformed(evt, "+");
    }//GEN-LAST:event_PlusActionPerformed
  
    private void CreateRecordButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateRecordButtonActionPerformed
     int MAX_NOTE_LENGTH = 255;
    // 1. Retrieve user input from GUI components
    String account = AccountDropdown1.getSelectedItem().toString();
    String category = CategoryDropdown.getSelectedItem().toString();
    String note = AddNotes.getText();
    // ... (retrieve other values as needed)

    // Check if the note exceeds the maximum length allowed for the note_column
    if (note.length() > MAX_NOTE_LENGTH) {
        JOptionPane.showMessageDialog(null, "Note is too long. Maximum length allowed is " + MAX_NOTE_LENGTH + " characters.");
        return; // Stop further execution
    }

    // Check if AmountField is not empty
    if (!AmountField.getText().isEmpty()) {
        currentValue = Double.parseDouble(AmountField.getText());
    }

    // 2. Get database connection
    try (Connection conn = ExpenseTracking.DatabaseConnection.getConnection()) {
        // 3. Prepare SQL statement to insert new record
        String insertSql = "INSERT INTO income (account_column, category_column, value_column, note_column) VALUES (?, ?, ?, ?)";
        PreparedStatement insertStmt = conn.prepareStatement(insertSql);
        insertStmt.setString(1, account);
        insertStmt.setString(2, category);
        insertStmt.setDouble(3, currentValue);
        insertStmt.setString(4, note);
        // ... (set other values based on their types)

        // 4. Execute SQL statement to insert new record
        int rowsAffected = insertStmt.executeUpdate();
        if (rowsAffected > 0) {
            JOptionPane.showMessageDialog(null, "Record created successfully!");
            
            // 5. After successfully inserting the record, execute SQL statement to fetch all records
            String selectSql = "SELECT account_column, category_column, value_column, note_column, created_at FROM income";
            PreparedStatement selectStmt = conn.prepareStatement(selectSql);
            ResultSet rs = selectStmt.executeQuery();

            // Create a list model to hold the data
            DefaultListModel<String> listModel = new DefaultListModel<>();

            // Collect data from the result set
            while (rs.next()) {
                String fetchedAccount = rs.getString("account_column");
                String fetchedCategory = rs.getString("category_column");
                double fetchedValue = rs.getDouble("value_column");
                String fetchedNote = rs.getString("note_column");
                String fetchedCreatedAt = rs.getString("created_at");

                // Format the fetched data
                String listItem = "<html><b>Account:</b> " + fetchedAccount + "<br>"
                                + "<b>Category:</b> " + fetchedCategory + "<br>"
                                + "<b>Value:</b> โฑ" + String.format("%.2f", fetchedValue) + "<br>"
                                + "<b>Note:</b> " + fetchedNote + "<br>"
                                + "<b>Created At:</b> " + fetchedCreatedAt + "<hr></html>";

                // Add the formatted data to the list model
                listModel.addElement(listItem);
            }

            // Set the model of jList1 with the populated list model
            jList1.setModel(listModel);
        } else {
            JOptionPane.showMessageDialog(null, "Failed to create record!");
        }
    } catch (SQLException e) {
        System.out.println("Error creating record: " + e.getMessage());
    }   

    // TODO add your handling code here:
    // storeData();
    // showStoredData();
    }//GEN-LAST:event_CreateRecordButtonActionPerformed

    private void jList1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jList1PropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_jList1PropertyChange
        

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> AccountDropdown1;
    private javax.swing.JTextArea AddNotes;
    private javax.swing.JTextField AmountField;
    private javax.swing.JLabel BalanceTrendTitle;
    private javax.swing.JLabel BaseBG;
    private javax.swing.JComboBox<String> CategoryDropdown;
    private javax.swing.JButton CreateRecordButton;
    private javax.swing.JButton DashboardButton;
    private javax.swing.JButton Divide;
    private javax.swing.JButton Equals;
    private javax.swing.JLabel ExpenseLoggerTitles;
    private javax.swing.JLabel ExpenseTrackingBG;
    private javax.swing.JButton ExpenseTrackingButton;
    private javax.swing.JButton GoalsAndReminders;
    private javax.swing.JButton IncomeTrackingButton;
    public javax.swing.JLabel Logout;
    private javax.swing.JButton LogoutButton;
    private javax.swing.JButton Minus;
    private javax.swing.JButton Plus;
    private javax.swing.JLabel Profile;
    private javax.swing.JScrollPane ScrollList;
    private javax.swing.JLabel SideMenu;
    private javax.swing.JScrollPane TextField;
    private javax.swing.JButton Times;
    private javax.swing.JButton WhatsNewButton;
    private javax.swing.JLabel WhiteBG;
    private javax.swing.JList<String> jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton noButton;
    private javax.swing.JButton yesButton;
    // End of variables declaration//GEN-END:variables
}
